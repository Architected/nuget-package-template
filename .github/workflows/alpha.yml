name: Alpha Pipeline

on:
  push:
    branches:
      - alpha
    paths:
      - 'src/**'
env:
  NUGET_USERNAME: architected_automation
  SRC_DIR: .src/code
  BUILD_ENVIRONMENT: dev
  COVERAGE_THRESHOLD: 90
  REPO_ORGANISATION: architected
concurrency: alpha-${{ github.ref}}
jobs:
  buildAndTest:
    name: Build And test
    runs-on: ubuntu-latest
    environment: ${{ env.BUILD_ENVIRONMENT }}
    timeout-minutes: 20
    steps:
      - uses: action/checkout@v3
        with:
          persist-credentials: false
      - name: Setup dotnet
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '6.0.x'
          include-prerelease: false
      - name: Add Github pacakges nuget source
        run: |
          dotnet nuget add source --username ${{ env.NUGET_USERNAME}} --password ${{secrets.NUGET_PAT}} --store-password-in-clear-text --name "https://nuget.pkg.github.com/${{env.REPO_ORGANISATION}}/index.json"
      - name: Install dependancies
        run: dotnet restore ${{env.SRC_DIR}}
      - name: Build solution
        run: dotnet build ${{env.SRC_DIR}} --configuration Release --no-restore
      - name: Install dotnet report generator tool
        run: dotnet tool install --global dotnet-reportgenerator-globaltool
      - name: Run unit tests
        run: dotnet test ${{env.SRC_DIR}} --filter FullyQualifiedName~Tests --configuration Release --verbosity quiet --collect:"XPlat Code Coverage" --results-directory ./coverage /p:Threshold=${{env.COVERAGE_THRESHOLD}}
      - name: Merge Coverage Reports
        run: reportgenerator -reports:./coverage/**/coverage.cobertura.xml -targetdir:./coverage -reporttypes:Cobertura
      - name: Code Coverage Report
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: coverage/**/coverage.cobertura.xml
          badge: true
          fail_below_min: true
          format: markdown
          hide_branch_rate: false
          hide_complexity: true
          indicators: true
          output: both
          thresholds: '60 80'
      - name: Add Coverage PR Comment
        uses: marocchino/sticky-pull-request-comment@v2
        if: github.event_name == 'pull_request'
        with:
          recreate: true
          path: code-coverage-results.md
  publishNugetPackage:
    name: Publish Nuget Package
    runs-on: ubuntu-latest
    environment: ${{ env.BUILD_ENVIRONMENT }}
    timeout-minutes: 20
    steps:
      - uses: action/checkout@v3
        with:
          persist-credentials: false
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 'lts/*'
      - name: Install NPM dependencies
        run: npm ci
      - name: Setup dotnet
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '6.0.x'
          include-prerelease: false
      - name: Add Github pacakges nuget source
        run: |
          dotnet nuget add source --username ${{ env.NUGET_USERNAME}} --password ${{secrets.NUGET_PAT}} --store-password-in-clear-text --name "https://nuget.pkg.github.com/${{env.REPO_ORGANISATION}}/index.json"
      - name: Install dependancies
        run: dotnet restore ${{env.SRC_DIR}}
      - name: Build solution
        run: dotnet build ${{env.SRC_DIR}} --configuration Release --no-restore
      - name: Semantic Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release
